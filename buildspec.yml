version: 0.2

env:
  variables:
    CLUSTER_NAME: three-tier-cluster
    REGION: us-east-1
    ACCOUNT_ID: 207567798584
    FRONTEND_REPO: 3-tier-frontend
    BACKEND_REPO: 3-tier-backend

phases:
  install:
    commands:
      - echo "Using standard Docker CodeBuild image"
      # No need to install kubectl if using aws/codebuild/standard:7.0

  pre_build:
    commands:
      - echo Logging into ECR...
      - IMAGE_TAG=v1.$CODEBUILD_BUILD_NUMBER
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com
      - echo Updating kubeconfig...
      - aws eks update-kubeconfig --region $REGION --name $CLUSTER_NAME

  build:
    commands:
      - echo Building frontend image...
      - docker build -t ${FRONTEND_REPO}:${IMAGE_TAG} ./frontend
      - docker tag ${FRONTEND_REPO}:${IMAGE_TAG} ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${FRONTEND_REPO}:${IMAGE_TAG}

      - echo Building backend image...
      - docker build -t ${BACKEND_REPO}:${IMAGE_TAG} ./backend
      - docker tag ${BACKEND_REPO}:${IMAGE_TAG} ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${BACKEND_REPO}:${IMAGE_TAG}

  post_build:
    commands:
      - echo Pushing frontend image...
      - docker push ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${FRONTEND_REPO}:${IMAGE_TAG}

      - echo Pushing backend image...
      - docker push ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${BACKEND_REPO}:${IMAGE_TAG}

      - echo Preparing Kubernetes manifests...
      - mkdir -p k8s-out
      - cp k8s_manifests/*.yaml k8s-out/ || true
      - cp k8s_manifests/mongo/*.yaml k8s-out/ || true
artifacts:
  base-directory: k8s-out
  files:
    - '*.yaml'
