version: 0.2

env:
  variables:
    CLUSTER_NAME: three-tier-cluster
    REGION: us-east-1
    ACCOUNT_ID: 207567798584
    FRONTEND_REPO: 3-tier-frontend
    BACKEND_REPO: 3-tier-backend
    IMAGE_TAG: "v1.$CODEBUILD_BUILD_NUMBER"

phases:
    commands:
      - echo Skipping kubectl install, assuming it's preinstalled
      - echo Installing utilities...
      - yum install -y jq

  pre_build:
    commands:
      - echo Logging into Amazon ECR...
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com
      - echo Updating kubeconfig for EKS...
      - aws eks update-kubeconfig --name $CLUSTER_NAME --region $REGION

  build:
    commands:
      - echo Building Docker images...
      - docker build -t ${FRONTEND_REPO}:${IMAGE_TAG} ./frontend
      - docker tag ${FRONTEND_REPO}:${IMAGE_TAG} ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${FRONTEND_REPO}:${IMAGE_TAG}
      - docker build -t ${BACKEND_REPO}:${IMAGE_TAG} ./backend
      - docker tag ${BACKEND_REPO}:${IMAGE_TAG} ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${BACKEND_REPO}:${IMAGE_TAG}
      - echo Pushing images to ECR...
      - docker push ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${FRONTEND_REPO}:${IMAGE_TAG}
      - docker push ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${BACKEND_REPO}:${IMAGE_TAG}

  post_build:
    commands:
      - echo Preparing Kubernetes manifests...
      - mkdir -p k8s-out
      - sed "s|IMAGE_PLACEHOLDER_FRONTEND|${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${FRONTEND_REPO}:${IMAGE_TAG}|g" k8s_manifests/frontend-deployment.yaml > k8s-out/frontend-deployment.yaml
      - sed "s|IMAGE_PLACEHOLDER_BACKEND|${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${BACKEND_REPO}:${IMAGE_TAG}|g" k8s_manifests/backend-deployment.yaml > k8s-out/backend-deployment.yaml
      - cp k8s_manifests/*.yaml k8s-out/
      - echo Applying Kubernetes manifests...
      - kubectl apply -f k8s-out/

artifacts:
  files:
    - k8s-out/*
