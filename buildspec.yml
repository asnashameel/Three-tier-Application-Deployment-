version: 0.2

env:
  variables:
    CLUSTER_NAME: three-tier-cluster
    REGION: us-east-1
    ACCOUNT_ID: 207567798584
    FRONTEND_REPO: 3-tier-frontend
    BACKEND_REPO: 3-tier-backend

phases:
  install:
    runtime-versions:
      docker: 20
    commands:
      - echo Skipping kubectl install because it is pre-installed

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com
      - echo Updating kubeconfig...
      - aws eks update-kubeconfig --name $CLUSTER_NAME --region $REGION
      - export IMAGE_TAG=v1.$CODEBUILD_BUILD_NUMBER
      - echo Image tag set to $IMAGE_TAG

  build:
    commands:
      - echo Building and tagging frontend image...
      - docker build -t $FRONTEND_REPO:$IMAGE_TAG ./frontend
      - docker tag $FRONTEND_REPO:$IMAGE_TAG $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$FRONTEND_REPO:$IMAGE_TAG

      - echo Building and tagging backend image...
      - docker build -t $BACKEND_REPO:$IMAGE_TAG ./backend
      - docker tag $BACKEND_REPO:$IMAGE_TAG $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$BACKEND_REPO:$IMAGE_TAG

  post_build:
    commands:
      - echo Pushing frontend image to ECR...
      - docker push $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$FRONTEND_REPO:$IMAGE_TAG

      - echo Pushing backend image to ECR...
      - docker push $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$BACKEND_REPO:$IMAGE_TAG

      - echo Deploying to EKS...
      - kubectl apply -f k8s_manifests/mongo/
      - kubectl apply -f k8s_manifests/backend-deployment.yaml
      - kubectl apply -f k8s_manifests/backend-service.yaml
      - kubectl apply -f k8s_manifests/frontend-deployment.yaml
      - kubectl apply -f k8s_manifests/frontend-service.yaml
      - kubectl apply -f k8s_manifests/full_stack_lb.yaml

artifacts:
  files:
    - '**/*'
